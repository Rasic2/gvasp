name: Publish Python Package

on:
  push:
    branches:
      - release  # 自动触发的分支
  workflow_dispatch:  # 添加这一行以支持手动触发

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # 确保完整克隆，获取所有历史记录和标签

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # 选择你的 Python 版本

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools==69.5.1 setuptools_scm==8.1.0 wheel numpy pybind11 Cython

      - name: Install cibuildwheel
        run: pip install cibuildwheel

      - name: Build wheels
        env:
          CIBW_BUILD: "cp39-manylinux_x86_64"
        run: cibuildwheel --output-dir dist

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          pip install twine
          twine upload dist/*.whl

  build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # 确保完整克隆，获取所有历史记录和标签

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # 选择你的 Python 版本

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools==69.5.1 setuptools_scm==8.1.0 wheel numpy pybind11 Cython

      - name: Install cibuildwheel
        run: pip install cibuildwheel

      - name: Build wheels
        env:
          CIBW_BUILD: "cp39-macosx_arm64"
        run: cibuildwheel --output-dir dist

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          pip install twine
          twine upload dist/*.whl